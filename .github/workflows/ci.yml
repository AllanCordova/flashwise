name: Continous Integration

on:
  push:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create .env
        run: cp .env.example .env

      - name: Composer install
        run: ./run composer install

      - name: Generate Codeception files
        run: ./run codecept build

      - name: Setup Uploads assets permissions
        run: sudo chown -R www-data:www-data public/assets/uploads

      - name: Up containers
        run: ./run up -d

      - name: PHPUnit Units test
        run: ./run test tests/Unit

  acceptance_tests:
    name: Acceptance Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create .env
        run: cp .env.example .env

      - name: Composer install
        run: ./run composer install

      - name: Clean Codeception cache
        run: rm -rf tests/Support/_generated/*

      - name: Generate Codeception files
        run: ./run codecept build
      
      - name: Verify test files
        run: |
          echo "=== Verificando arquivos de teste ==="
          ls -la tests/Acceptance/
          echo ""
          echo "=== Conteúdo de PublicCest.php ==="
          cat tests/Acceptance/PublicCest.php
          echo ""
          echo "=== Conteúdo de AuthCest.php ==="
          cat tests/Acceptance/AuthCest.php

      - name: Down containers (clean start)
        run: ./run down -v || true

      - name: Remove all Docker volumes
        run: docker volume prune -f || true

      - name: Up containers
        run: ./run up -d --build --force-recreate

      - name: Wait for containers
        run: sleep 10

      - name: Clear all PHP caches inside container
        run: |
          echo "=== Limpando caches PHP ==="
          ./run php -r "if (function_exists('opcache_reset')) { opcache_reset(); echo 'OPCache limpo\n'; } else { echo 'OPCache não disponível\n'; }"
          ./run php -r "if (function_exists('apcu_clear_cache')) { apcu_clear_cache(); echo 'APCu limpo\n'; } else { echo 'APCu não disponível\n'; }"
          echo "=== Verificando código dentro do container ==="
          echo "Conteúdo de PublicCest.php:"
          ./run cat tests/Acceptance/PublicCest.php
          echo ""
          echo "Conteúdo de AuthCest.php:"
          ./run cat tests/Acceptance/AuthCest.php
          echo ""
          echo "Conteúdo de _flash_message.phtml:"
          ./run cat app/views/layouts/_flash_message.phtml

      - name: See containers
        run: ./run ps

      - name: PHPUnit Acceptance test
        run: ./run test tests/Acceptance

  code_quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create .env
        run: cp .env.example .env

      - name: Composer install
        run: ./run composer install

      - name: Run PHPStan
        run: ./run composer phpstan

      - name: Run PHP CS Fixer (dry-run)
        run: ./run composer cs-fix-dry-run